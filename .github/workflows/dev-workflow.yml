name: CI for Group Projects

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]



jobs:
  django-tests:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jwt_auth_db
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      working-directory: ./backend
    - name: Run migrations
      run: python manage.py migrate
      working-directory: ./backend
    - name: Run tests
      run: python manage.py test
      working-directory: ./backend    
      
  react-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set Up Node for Frontend
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - run: npm ci
      working-directory: ./frontend
    - run: npm run build --if-present
      working-directory: ./frontend
    - run: npm test
      working-directory: ./frontend

  run-compose:
    needs: [django-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Start containers
      run: ./run-compose-dev-ci.sh
    

  stop-containers:
    needs: [run-compose]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Stop Containers
      run: docker-compose -f docker-compose.dev.yml down